# name: delete packages

# on:
#   # Triggers the workflow on push or pull request events but only for the main branch
#   push:
#     branches: [ main ]
#   pull_request:
#     branches: [ main ]

#   # Allows you to run this workflow manually from the Actions tab
#   workflow_dispatch:

# # # A workflow run is made up of one or more jobs that can run sequentially or in parallel
# # jobs:
# #   # This workflow contains a single job called "build"
# #   test:
# #     # The type of runner that the job will run on
# #     runs-on: ubuntu-latest
# #     # Steps represent a sequence of tasks that will be executed as part of the job
# #     steps:
# # #     - uses: actions/checkout@v2
# #       - name: Echo
# #         shell: bash
# #         run: |
# #           echo Heyyyyy
# #       - name: Clean old packages - keep last 3
# #         uses: nikhilpatil2995/container-registry@v1.0.0
# #         with:
# #           keep: 1
# #           names: ubuntu
# #       - name: Delete old packages
# #         uses: nikhilpatil2995/container-registry@main
# #         with:
# #           # Owner of the repo containing the package(s). Defaults to the owner of the repo running the action.
# #           owner: nikhilpatil2995
# #           names: ubuntu
# #           version: 2
# # #           token: ${{ secrets.token }}
# runs:
#   using: "composite"
#   steps:
#     - name: Delete old packages
#       uses: nikhilpatil2995/container-registry@main
#       with:
#       # Owner of the repo containing the package(s). Defaults to the owner of the repo running the action.
#         owner: nikhilpatil2995
#         names: ubuntu
#         version: 2
# #           token: ${{ secrets.token }}

# name: 'Hello World'
# description: 'Greet someone and record the time'
# inputs:
#   who-to-greet:  # id of input
#     description: 'Who to greet'
#     required: true
#     default: 'World'
# outputs:
#   time: # id of output
#     description: 'The time we greeted you'
# runs:
#   using: 'docker'
#   image: 'Dockerfile'
#   args:
#     - ${{ inputs.who-to-greet }}


name: Delete Package Versions

description: Deletes package versions

inputs:

  package-version-ids:
    description: Comma separated string of package version ids to delete.
    required: false

  owner:
    description: >
      Owner of the repo containing the package version to delete.
      Defaults to the owner of the repo running the action.
    required: false

  repo:
    description: >
      Repo containing the package version to delete.
      Defaults to the repo running the action.
    required: false

  package-name:
    description: >
      Name of the package containing the version to delete.
      Required if dynamically deleting oldest versions.
    required: false

  num-old-versions-to-delete:
    description: >
      Number of versions to delete starting with the oldest version.
      Defaults to 1.
    required: false
    default: "1"

  token:
    description: >
      Token with the necessary scopes to delete package versions.
      If num-old-versions-to-delete is used the token also needs the read packages scope.
      Defaults to github.token scoped to the repo running the action. To delete package versions
      of a package outside the repo the action is running in use a Personal Access Token stored as a secret.
    required: false
    default: ${{ github.token }}

runs:
  using: node12
  main: dist/index.js

branding:
  icon: package
  color: blue
